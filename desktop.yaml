version: "3.9"
networks: { web: { external: false } }

services:
  traefik:
    image: traefik:v3
    command:
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.address=:80
      - --providers.docker=true
      - --providers.file.directory=/etc/traefik/dynamic
      - --providers.file.watch=true
      - --api.dashboard=false
      - --certificatesresolvers.le.acme.tlschallenge=true
      - --certificatesresolvers.le.acme.email=admin@example.com
      - --certificatesresolvers.le.acme.storage=/acme.json
    ports: ["80:80","443:443"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/acme.json:/acme.json
      - ./traefik/dynamic:/etc/traefik/dynamic
    networks: [web]

  spawner:
    image: ghcr.io/your-org/spawner:latest
    environment:
      - BASE_DOMAIN=example.com
      - INACTIVITY_SECONDS=900          # 15 минут простоя → стоп контейнера
      - TRAEFIK_MIDDLEWARE=forward-auth@file
    volumes: ["/var/run/docker.sock:/var/run/docker.sock"]
    networks: [web]
    labels:
      - traefik.enable=true
      # «ловим» все поддомены и отдаём в спавнер, если нет конкретного сервиса:
      - traefik.http.routers.fallback.rule=HostRegexp(`{subdomain:.+}.example.com`)
      - traefik.http.routers.fallback.entrypoints=websecure
      - traefik.http.routers.fallback.tls.certresolver=le
      - traefik.http.routers.fallback.service=spawner
      - traefik.http.services.spawner.loadbalancer.server.port=8080
